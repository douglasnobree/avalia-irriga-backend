generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Avaliador {
  id            String        @id @default(uuid())
  name          String?
  email         String        @unique
  emailVerified DateTime?
  password      String
  image         String?
  role          UserRole      @default(USER)
  refreshToken  String?       @db.Text
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  accounts      Account[]
  Propriedade   Propriedade[]
}

model Account {
  id                String    @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              Avaliador @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Propriedade {
  id               String             @id @unique @default(uuid())
  nome             String
  proprietario     String
  telefone         String
  email            String
  municipio        String
  estado           String
  latitude         Float
  longitude        Float
  area_total       Float
  area_irrigada    Float
  observacoes      String
  userId           String
  user             Avaliador          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Unidade_avaliada Unidade_avaliada[]
}

model Unidade_avaliada {
  id             String      @id @default(uuid())
  indentificacao String
  area_ha        Float
  propriedade_id String
  avaliacoes     Avaliacao[]
  propiedade     Propriedade @relation(fields: [propriedade_id], references: [id], onDelete: Cascade)
}

model Avaliacao {
  id               String             @id @default(uuid())
  data             DateTime           @default(now())
  area_irrigada    Float
  volume_agua      Float
  tempo_irrigacao  Float
  cud              Float
  cuc              Float
  offline_status   Boolean
  avaliador_id     String
  unidade_type     UnitModel
  unidade_id       String
  setor_id         String?
  pivo_id          String?
  pivo             Pivo_Central?      @relation(fields: [pivo_id], references: [id])
  setor            Setor_Hidraulico?  @relation(fields: [setor_id], references: [id])
  unidade          Unidade_avaliada   @relation(fields: [unidade_id], references: [id])
  Comentario       Comentario[]
  Ponto_localizada Ponto_localizada[]
  Ponto_pivo       Ponto_pivo[]
}

model Comentario {
  id           String    @id @default(uuid())
  comentario   String
  avaliacao_id String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  avaliacao    Avaliacao @relation(fields: [avaliacao_id], references: [id], onDelete: Cascade)
  Foto         Foto[]
}

model Foto {
  id            String     @id @default(uuid())
  url           String
  descricao     String
  comentario_id String
  comentario    Comentario @relation(fields: [comentario_id], references: [id], onDelete: Cascade)
}

model Ponto_localizada {
  id           String    @id @default(uuid())
  eixo_x       Float
  eixo_y       Float
  volume_ml    Float
  tempo_seg    Int
  vazao_l_h    Float
  avaliacao_id String
  avaliacao    Avaliacao @relation(fields: [avaliacao_id], references: [id], onDelete: Cascade)
}

model Ponto_pivo {
  id               String    @id @default(uuid())
  sequencia        Int
  distancia        Float
  diametro_coletor Float
  volume_ml        Float
  tempo_seg        Int
  vazao_l_h        Float
  avaliacao_id     String
  avaliacao        Avaliacao @relation(fields: [avaliacao_id], references: [id], onDelete: Cascade)
}

model Setor_Hidraulico {
  id                     String      @id @default(uuid())
  fabricante             String
  modelo                 String
  vazao_nominal          Float
  pressao_trabalho       Float
  pressao_recomendada    Float
  dist_emissores         Float
  dist_laterais          Float
  filtro_tipo            String
  malha_filtro           String
  pressao_entrada        Float
  valvula_tipo           String
  energia_tipo           String
  condicoes_gerais       String
  num_emissores          Int
  freq_manutencao        String
  data_ultima_manutencao DateTime
  emissor_type           EmissorType
  avaliacoes             Avaliacao[]
}

model Pivo_Central {
  id                     String      @id @default(uuid())
  num_torres             Int
  comprimento            Float
  fabricante             String
  modelo                 String
  emissor_type           EmissorType
  energia_tipo           String
  potencia_motor         Float
  vazao_operacao         Float
  controle_tipo          String
  fertirrigacao          Boolean
  fonte_hidrica          String
  tempo_funcionamento    Float
  velocidade             Float
  bocal_tipo             String
  pressao_bocal          Float
  data_ultima_manutencao DateTime
  freq_manutencao        String
  problemas_observados   String
  data_ultima_avaliacoes DateTime
  avaliacoes             Avaliacao[]
}

enum UserRole {
  USER
  ADMIN
}

enum UnitType {
  LOCALIZADA
  PIVO
}

enum EmissorType {
  MICROMICROASPERSOR
  GOTEJAMENTO
}

enum UnitModel {
  SETOR_HIDRAULICO
  PIVO_CENTRAL
}
